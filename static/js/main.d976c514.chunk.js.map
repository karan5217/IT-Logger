{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","ref","onChange","e","current","value","placeholder","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d976c514.chunk.js","sourcesContent":["import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT\r\n  } from './types';\r\n\r\n//   export const getLogs = () => {\r\n//     return async dispatch => {\r\n//             setLoading();\r\n        \r\n//             const res = await fetch('/logs');\r\n//             const data = await res.json();\r\n        \r\n//             dispatch({\r\n//               type: GET_LOGS,\r\n//               payload: data\r\n//             });\r\n//           };\r\n//   };\r\n\r\nexport const getLogs = () => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch('/logs');\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: GET_LOGS,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n\r\n  export const addLog = log => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch('/logs', {\r\n        method: 'POST',\r\n        body: JSON.stringify(log),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: ADD_LOG,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n\r\n  export const deleteLog = id => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      await fetch(`/logs/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n  \r\n      dispatch({\r\n        type: DELETE_LOG,\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const updateLog = log => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch(`/logs/${log.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(log),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n  \r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: UPDATE_LOG,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n\r\n  export const searchLogs = text => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch(`/logs?q=${text}`);\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: SEARCH_LOGS,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOGS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n\r\n  export const setCurrent = log => {\r\n    return {\r\n      type: SET_CURRENT,\r\n      payload: log\r\n    };\r\n  };\r\n\r\n  export const clearCurrent = () => {\r\n    return {\r\n      type: CLEAR_CURRENT\r\n    };\r\n  };\r\n\r\n  export const setLoading=()=>{\r\n      return{\r\n          type:SET_LOADING\r\n      }\r\n  }","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { searchLogs } from '../../actions/logActions';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  const text = useRef('');\r\n\r\n  const onChange = e => {\r\n    searchLogs(text.current.value);\r\n  };\r\n    return (\r\n        <nav style={{marginBottom:'30px'}} className=\"blue\"> \r\n        <div className=\"nav-wrapper\">\r\n          <form>\r\n            <div className=\"input-field\">\r\n              <input id=\"search\" type=\"search\" ref={text}\r\n              onChange={onChange}  placeholder='Search Logs..'/>\r\n              <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\" >search</i></label>\r\n              <i className=\"material-icons\">close</i>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { searchLogs }\r\n)(SearchBar);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n\r\n    const onDelete = () => {\r\n        deleteLog(log.id);\r\n        M.toast({ html: 'Log Deleted' });\r\n      };\r\n\r\n\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <div>\r\n    <a href=\"#edit-log-modal\" className={`modal-trigger ${log.attention ? 'red-text':'blue-text'}`} onClick={() => setCurrent(log)}>{log.message}</a>\r\n    <br/>\r\n    <span className=\"grey-text\">\r\n    <span className=\"black-text\">ID #{log.id}</span> Last updated by {' '}\r\n    <span className=\"black-text\">{log.tech}</span> on {' '}\r\n    <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\r\n    </span>\r\n    <a href=\"#!\"  className=\"secondary-content\" onClick={onDelete}>\r\n        <i className=\"material-icons grey-text\">delete</i>\r\n    </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nLogItem.propTypes = {\r\n    log:PropTypes.object.isRequired,\r\n    deleteLog: PropTypes.func.isRequired,\r\n    setCurrent: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n     { deleteLog, setCurrent}\r\n  )(LogItem);\r\n","import React from 'react'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"progress blue lighten-4\">\r\n            <div className=\"indeterminate blue\">\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","import React,{  useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport PropTypes from 'prop-types';\r\nimport Preloader from '../layout/Preloader';\r\nimport { getLogs } from '../../actions/logActions';\r\n\r\n\r\n const Logs = ({ log: { logs, loading }, getLogs }) => {\r\n\r\n     useEffect(() => {\r\n         getLogs();\r\n         //eslint-disable-next-line\r\n     }, [])\r\n\r\n     if (loading || logs === null) {\r\n        return <Preloader />;\r\n      }\r\n    return (\r\n        <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n                <h4 className=\"center\">System Logs</h4>\r\n            </li>\r\n            {!loading && logs.length===0 ?(<p className=\"center\">NO Logs to show</p>):(\r\n                logs.map(log=><LogItem log={log} key={log.id}/>)\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\nLogs.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    getLogs: PropTypes.func.isRequired\r\n  };\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log\r\n  });\r\n  export default connect(\r\n    mapStateToProps,\r\n    { getLogs }\r\n  )(Logs);\r\n","import React from 'react'\r\n\r\nconst AddBtn = () => {\r\n    return (\r\n        <div className='fixed-action-btn'>\r\n        <a\r\n          href='#add-log-modal'\r\n          className='btn-floating btn-large blue darken-2 modal-trigger'\r\n        >\r\n          <i className='large material-icons'>add</i>\r\n        </a>\r\n        <ul>\r\n          <li>\r\n            <a\r\n              href='#tech-list-modal'\r\n              className='btn-floating green modal-trigger'\r\n            >\r\n              <i className='material-icons'>person</i>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n              <i className='material-icons'>person_add</i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default AddBtn;\r\n","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n  } from './types';\r\n  \r\n  export const getTechs = () => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch('/techs');\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: GET_TECHS,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TECHS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const addTech = tech => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      const res = await fetch('/techs', {\r\n        method: 'POST',\r\n        body: JSON.stringify(tech),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      const data = await res.json();\r\n  \r\n      dispatch({\r\n        type: ADD_TECH,\r\n        payload: data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TECHS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const deleteTech = id => async dispatch => {\r\n    try {\r\n      setLoading();\r\n  \r\n      await fetch(`/techs/${id}`, {\r\n        method: 'DELETE'\r\n      });\r\n  \r\n      dispatch({\r\n        type: DELETE_TECH,\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TECHS_ERROR,\r\n        payload: err.response.statusText\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const setLoading = () => {\r\n    return {\r\n      type: SET_LOADING\r\n    };\r\n  };","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map(t => (\r\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechSelectOptions);","import React, { useState } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    const onSubmit=()=>{\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and tech' });\r\n          } else {\r\n            const newLog = {\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n              };\r\n        \r\n              addLog(newLog);\r\n        \r\n              M.toast({ html: `Log added by ${tech}` });\r\n        setAttention(false);\r\n        setMessage('');\r\n        setTech('');\r\n    }\r\n}\r\n    return (\r\n        <div id='add-log-modal' className='modal' style={modalStyle}>\r\n        <div className='modal-content'>\r\n          <h4>Enter System Log</h4>\r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <input\r\n                type='text'\r\n                name='message'\r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n              />\r\n              <label htmlFor='message' className='active'>\r\n                Log Message\r\n              </label>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <select\r\n                name='tech'\r\n                value={tech}\r\n                className='browser-default'\r\n                onChange={e => setTech(e.target.value)}\r\n              >\r\n                <option value='' disabled>\r\n                  Select Technician\r\n                </option>\r\n                <TechSelectOptions />\r\n              </select>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <p>\r\n                <label>\r\n                  <input\r\n                    type='checkbox'\r\n                    className='filled-in'\r\n                    checked={attention}\r\n                    value={attention}\r\n                    onChange={e => setAttention(!attention)}\r\n                  />\r\n                  <span>Needs Attention</span>\r\n                </label>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='modal-footer'>\r\n          <a\r\n            href='#!'\r\n            onClick={onSubmit}\r\n            className='modal-close waves-effect blue waves-light btn'\r\n          >\r\n            Enter\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  AddLogModal.propTypes = {\r\n    addLog: PropTypes.func.isRequired\r\n  };\r\n  \r\n  const modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n  };\r\n  \r\n\r\n\r\n  export default connect(\r\n    null,\r\n    { addLog }\r\n  )(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (current) {\r\n          setMessage(current.message);\r\n          setAttention(current.attention);\r\n          setTech(current.tech);\r\n        }\r\n      }, [current]);\r\n\r\n    const onSubmit=()=>{\r\n        if (message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and tech' });\r\n          } else {\r\n            const updLog = {\r\n                id: current.id,\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n              };\r\n        \r\n              updateLog(updLog);\r\n              M.toast({ html: `Log updated by ${tech}` });\r\n        setAttention(false);\r\n        setMessage('');\r\n        setTech('');\r\n    }\r\n}\r\n    return (\r\n        <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n        <div className='modal-content'>\r\n          <h4>Enter System Log</h4>\r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <input\r\n                type='text'\r\n                name='message'\r\n                value={message}\r\n                onChange={e => setMessage(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n  \r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <select\r\n                name='tech'\r\n                value={tech}\r\n                className='browser-default'\r\n                onChange={e => setTech(e.target.value)}\r\n              >\r\n                <option value='' disabled>\r\n                  Select Technician\r\n                </option>\r\n                <TechSelectOptions/>\r\n              </select>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <p>\r\n                <label>\r\n                  <input\r\n                    type='checkbox'\r\n                    className='filled-in'\r\n                    checked={attention}\r\n                    value={attention}\r\n                    onChange={e => setAttention(!attention)}\r\n                  />\r\n                  <span>Needs Attention</span>\r\n                </label>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='modal-footer'>\r\n          <a\r\n            href='#!'\r\n            onClick={onSubmit}\r\n            className='modal-close waves-effect blue waves-light btn'\r\n          >\r\n            Enter\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  \r\n  const modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n  };\r\n\r\n  EditLogModal.propTypes = {\r\n    current: PropTypes.object,\r\n    updateLog: PropTypes.func.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    current: state.log.current\r\n  });\r\n\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { updateLog }\r\n  )(EditLogModal);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const onSubmit=()=>{\r\n        if (firstName === '' || lastName === '') {\r\n            M.toast({ html: 'Please enter the first and last name' });\r\n          } else {\r\n            addTech({\r\n              firstName,\r\n              lastName\r\n            });\r\n\r\n            M.toast({ html: `${firstName} ${lastName} was added as a tech` });\r\n\r\n        setFirstName('');\r\n        setLastName('');\r\n    }\r\n}\r\n    return (\r\n        <div id='add-tech-modal' className='modal'>\r\n        <div className='modal-content'>\r\n          <h4>New Technician</h4>\r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <input\r\n                type='text'\r\n                name='firstName'\r\n                value={firstName}\r\n                onChange={e => setFirstName(e.target.value)}\r\n              />\r\n              <label htmlFor='firstName' className='active'>\r\n                First Name\r\n              </label>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className='row'>\r\n            <div className='input-field'>\r\n              <input\r\n                type='text'\r\n                name='lastName'\r\n                value={lastName}\r\n                onChange={e => setLastName(e.target.value)}\r\n              />\r\n              <label htmlFor='lastName' className='active'>\r\n                Last Name\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='modal-footer'>\r\n          <a\r\n            href='#!'\r\n            onClick={onSubmit}\r\n            className='modal-close waves-effect blue waves-light btn'\r\n          >\r\n            Enter\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addTech }\r\n)(AddTechModal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\r\n\r\n  const onDelete = () => {\r\n    deleteTech(id);\r\n    M.toast({ html: 'Technician deleted' });\r\n  };\r\n\r\n    return (\r\n        <li className='collection-item'>\r\n      <div>\r\n        {firstName} {lastName}\r\n        <a href='#!' className='secondary-content' onClick={onDelete}>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n    )\r\n}\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteTech }\r\n)(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TechItem from './TechItem';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\n\r\n const TechListModal = ({ getTechs, tech: { techs, loading } }) => {\r\n    \r\n\r\n     useEffect(() => {\r\n         getTechs();\r\n         //eslint-disable-next-line\r\n     }, [])\r\n\r\n     \r\n\r\n\r\n    return (\r\n        <div id='tech-list-modal' className='modal'>\r\n        <div className='modal-content'>\r\n          <h4>Technician List</h4>\r\n          <ul className='collection'>\r\n            {!loading &&\r\n              techs !== null &&\r\n              techs.map(tech => <TechItem tech={tech} key={tech.id}/>)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nTechListModal.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  getTechs: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tech: state.tech\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getTechs }\r\n)(TechListModal);\r\n","import {\r\n    GET_LOGS,\r\n    SET_LOADING,\r\n    LOGS_ERROR,\r\n    ADD_LOG,\r\n    DELETE_LOG,\r\n    UPDATE_LOG,\r\n    SEARCH_LOGS,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT\r\n  } from '../actions/types';\r\n\r\nconst initialState = {\r\n    logs: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false\r\n      };\r\n      case DELETE_LOG:\r\n        return {\r\n          ...state,\r\n          logs: state.logs.filter(log => log.id !== action.payload),\r\n          loading: false\r\n        };\r\n        case UPDATE_LOG:\r\n            return {\r\n              ...state,\r\n              logs: state.logs.map(log =>\r\n                log.id === action.payload.id ? action.payload : log\r\n              )\r\n            };\r\n          case SEARCH_LOGS:\r\n            return {\r\n              ...state,\r\n              logs: action.payload\r\n            };\r\n          case SET_CURRENT:\r\n            return {\r\n              ...state,\r\n              current: action.payload\r\n            };\r\n          case CLEAR_CURRENT:\r\n            return {\r\n              ...state,\r\n              current: null\r\n            };\r\n      case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n        loading: false\r\n      };\r\n        case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n      case LOGS_ERROR:\r\n        console.error(action.payload);\r\n        return {\r\n          ...state,\r\n          error: action.payload\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_TECHS,\r\n    ADD_TECH,\r\n    DELETE_TECH,\r\n    SET_LOADING,\r\n    TECHS_ERROR\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    techs: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_TECHS:\r\n        return {\r\n          ...state,\r\n          techs: action.payload,\r\n          loading: false\r\n        };\r\n      case ADD_TECH:\r\n        return {\r\n          ...state,\r\n          techs: [...state.techs, action.payload],\r\n          loading: false\r\n        };\r\n      case DELETE_TECH:\r\n        return {\r\n          ...state,\r\n          techs: state.techs.filter(tech => tech.id !== action.payload),\r\n          loading: false\r\n        };\r\n      case SET_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case TECHS_ERROR:\r\n        console.error(action.payload);\r\n        return {\r\n          ...state,\r\n          error: action.payload,\r\n          loading: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };","\r\nimport { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React,{Fragment,useEffect} from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport {Provider} from 'react-redux';\nimport store from './store'\n\nconst App=()=> {\n  useEffect(()=>{\n    //Init Materialize JS\n    M.AutoInit();\n  })\n  return (\n    <Provider store={store}>\n    <Fragment>\n     <SearchBar/>\n     <div className=\"container\">\n       <AddBtn/>\n       <AddLogModal/>\n       <EditLogModal/>\n       <AddTechModal/>\n       <TechListModal/>\n       <Logs/>\n     </div>\n    </Fragment>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n \n"],"sourceRoot":""}